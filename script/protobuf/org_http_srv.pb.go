// Code generated by protoc-gen-go. DO NOT EDIT.
// source: org_http_srv.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetOrgsReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrgsReq) Reset()         { *m = GetOrgsReq{} }
func (m *GetOrgsReq) String() string { return proto.CompactTextString(m) }
func (*GetOrgsReq) ProtoMessage()    {}
func (*GetOrgsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a5aa0f973a6e7b, []int{0}
}

func (m *GetOrgsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrgsReq.Unmarshal(m, b)
}
func (m *GetOrgsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrgsReq.Marshal(b, m, deterministic)
}
func (m *GetOrgsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrgsReq.Merge(m, src)
}
func (m *GetOrgsReq) XXX_Size() int {
	return xxx_messageInfo_GetOrgsReq.Size(m)
}
func (m *GetOrgsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrgsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrgsReq proto.InternalMessageInfo

type GetOrgsRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrgsRes) Reset()         { *m = GetOrgsRes{} }
func (m *GetOrgsRes) String() string { return proto.CompactTextString(m) }
func (*GetOrgsRes) ProtoMessage()    {}
func (*GetOrgsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a5aa0f973a6e7b, []int{1}
}

func (m *GetOrgsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrgsRes.Unmarshal(m, b)
}
func (m *GetOrgsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrgsRes.Marshal(b, m, deterministic)
}
func (m *GetOrgsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrgsRes.Merge(m, src)
}
func (m *GetOrgsRes) XXX_Size() int {
	return xxx_messageInfo_GetOrgsRes.Size(m)
}
func (m *GetOrgsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrgsRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrgsRes proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetOrgsReq)(nil), "protobuf.GetOrgsReq")
	proto.RegisterType((*GetOrgsRes)(nil), "protobuf.GetOrgsRes")
}

func init() { proto.RegisterFile("org_http_srv.proto", fileDescriptor_86a5aa0f973a6e7b) }

var fileDescriptor_86a5aa0f973a6e7b = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0x2f, 0x4a, 0x8f,
	0xcf, 0x28, 0x29, 0x29, 0x88, 0x2f, 0x2e, 0x2a, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x00, 0x53, 0x49, 0xa5, 0x69, 0x52, 0x32, 0xe9, 0xf9, 0xf9, 0xe9, 0x39, 0xa9, 0xfa, 0x89, 0x05,
	0x99, 0xfa, 0x89, 0x79, 0x79, 0xf9, 0x25, 0x89, 0x25, 0x99, 0xf9, 0x79, 0xc5, 0x10, 0x75, 0x4a,
	0x3c, 0x5c, 0x5c, 0xee, 0xa9, 0x25, 0xfe, 0x45, 0xe9, 0xc5, 0x41, 0xa9, 0x85, 0x28, 0xbc, 0x62,
	0xa3, 0x18, 0x2e, 0x2e, 0xff, 0xa2, 0xf4, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x3f,
	0x2e, 0x76, 0xa8, 0x9c, 0x90, 0x88, 0x1e, 0xcc, 0x74, 0x3d, 0x84, 0x66, 0x29, 0x6c, 0xa2, 0xc5,
	0x4a, 0xe2, 0x4d, 0x97, 0x9f, 0x4c, 0x66, 0x12, 0x54, 0xe2, 0xd1, 0xcf, 0x2f, 0x4a, 0xd7, 0x87,
	0x4a, 0x58, 0x31, 0x6a, 0x39, 0xf1, 0x46, 0x71, 0xeb, 0xe9, 0xe9, 0xc3, 0xb4, 0x24, 0xb1, 0x81,
	0x59, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x34, 0x51, 0x86, 0xcd, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrgServiceClient is the client API for OrgService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrgServiceClient interface {
	//获取组织树:部门>组>团队
	GetOrgs(ctx context.Context, in *GetOrgsReq, opts ...grpc.CallOption) (*GetOrgsRes, error)
}

type orgServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOrgServiceClient(cc grpc.ClientConnInterface) OrgServiceClient {
	return &orgServiceClient{cc}
}

func (c *orgServiceClient) GetOrgs(ctx context.Context, in *GetOrgsReq, opts ...grpc.CallOption) (*GetOrgsRes, error) {
	out := new(GetOrgsRes)
	err := c.cc.Invoke(ctx, "/protobuf.OrgService/GetOrgs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrgServiceServer is the server API for OrgService service.
type OrgServiceServer interface {
	//获取组织树:部门>组>团队
	GetOrgs(context.Context, *GetOrgsReq) (*GetOrgsRes, error)
}

// UnimplementedOrgServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrgServiceServer struct {
}

func (*UnimplementedOrgServiceServer) GetOrgs(ctx context.Context, req *GetOrgsReq) (*GetOrgsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrgs not implemented")
}

func RegisterOrgServiceServer(s *grpc.Server, srv OrgServiceServer) {
	s.RegisterService(&_OrgService_serviceDesc, srv)
}

func _OrgService_GetOrgs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrgsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgServiceServer).GetOrgs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.OrgService/GetOrgs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgServiceServer).GetOrgs(ctx, req.(*GetOrgsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrgService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.OrgService",
	HandlerType: (*OrgServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOrgs",
			Handler:    _OrgService_GetOrgs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "org_http_srv.proto",
}
